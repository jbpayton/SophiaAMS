version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: sophia-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - sophia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Python Agent Server
  sophia-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sophia-agent
    ports:
      - "5001:5001"
    volumes:
      - episodic_memory:/app/data/episodic_memory
      - vector_data:/app/VectorKnowledgeGraphData
      - agent_logs:/app/logs
    environment:
      - OPENAI_API_BASE=${OPENAI_API_BASE:-http://host.docker.internal:1234/v1}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-lm-studio}
      - QDRANT_URL=${QDRANT_URL:-http://qdrant:6333}
      - SEARXNG_URL=${SEARXNG_URL:-http://host.docker.internal:8088}
      - AGENT_PORT=5001
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - sophia-network
    depends_on:
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Node.js Proxy Server
  sophia-server:
    build:
      context: ./sophia-web/server
      dockerfile: Dockerfile
    container_name: sophia-server
    ports:
      - "3001:3001"
    environment:
      - AGENT_URL=http://sophia-agent:5001
      - PORT=3001
      - NODE_ENV=production
    networks:
      - sophia-network
    depends_on:
      sophia-agent:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # React Frontend
  sophia-web:
    build:
      context: ./sophia-web/client
      dockerfile: Dockerfile
    container_name: sophia-web
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:3001
    networks:
      - sophia-network
    depends_on:
      sophia-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

networks:
  sophia-network:
    driver: bridge

volumes:
  qdrant_storage:
    driver: local
  episodic_memory:
    driver: local
  vector_data:
    driver: local
  agent_logs:
    driver: local
